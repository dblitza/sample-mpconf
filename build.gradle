allprojects  {

  apply plugin: 'maven'
  apply plugin: 'war'

  group = 'io.microprofile.showcase'
  version = '1.0.0-SNAPSHOT'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'liberty'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  buildscript {
    repositories {
        mavenLocal()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        mavenCentral()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.0-SNAPSHOT'
    }
}

repositories {
    mavenCentral()   
}

  
  dependencies {
    compile "javax:javaee-api:7.0"
    compile "io.swagger:swagger-jaxrs:1.5.10"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.8.2"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.82"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.codehaus.swizzle:swizzle-stream:1.6.2"
    compile "commons-io:commons-io:2.5"
    compile "commons-collections:commons-collections:3.2.2"
    compile "org.jboss.arquillian:arquillian-bom:1.1.11.Final"
    testCompile "org.jboss.arquillian.container:arquillian-glassfish-embedded-3.1:1.0.0.Final"
    compile "org.jboss.resteasy:resteasy-client:3.0.19.Final"
    compile "org.jboss.resteasy:resteasy-jaxrs:3.0.19.Final"
    compile "org.jboss.resteasy:resteasy-jackson-provider:3.0.19.Final"
    compile "com.fasterxml.jackson.core:jackson-databind:2.8.2"
    compile "junit:junit:4.12"
    compile "net.javacrumbs.json-unit:json-unit-fluent:1.12.1"
    compile "com.google.code.bean-matchers:bean-matchers:0.9"
}


war {
    archiveName = baseName + '.' + extension
}
    
liberty {
    server {
        configFile = file('src/main/liberty/config/server.xml')
        bootstrapProperties = ['default.http.port': testServerHttpPort, 
                               'default.https.port': testServerHttpsPort,
                               'appContext': warContext,
                               'appLocation': war.archiveName]
        
        looseApplication = true
    }
    
    packageLiberty {
        include = packagingType
    }
}

// test {
//     println 'inside the unit test block'
//     reports.html.destination = file("$buildDir/reports/unit")
//     reports.junitXml.destination = file("$buildDir/test-results/unit")
//     exclude '**/it/**'
// }


// task integrationTest(type: Test) {
//     group 'Verification'
//     description 'Runs the integration tests.'
//     reports.html.destination = file("$buildDir/reports/it")
//     reports.junitXml.destination = file("$buildDir/test-results/it")
//     include '**/it/**'
//     exclude '**/unit/**'

//     systemProperties = ['liberty.test.port': testServerHttpPort, 'war.context': warContext]
// }

// task printMessageAboutRunningServer {
//     doLast {
//         println "The server is now running at http://localhost:${testServerHttpPort}/${warContext}"
//         println "To stop the server run 'gradle libertyStop'"
//     }
// }

libertyStart.dependsOn 'installApps'
libertyStart.finalizedBy 'printMessageAboutRunningServer'




  
}
